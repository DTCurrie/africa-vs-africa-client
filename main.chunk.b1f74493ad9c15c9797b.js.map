{"version":3,"sources":["webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Track/Track.tsx","webpack:///./src/index.tsx","webpack:///./src/components/App.tsx"],"names":["Footer","react","className","href","index_esm","icon","MarkGithub","size","verticalAlign","TrackError","props","error","TrackContent","track","calculateTransform","value","window","innerWidth","concat","_useState2","_slicedToArray","useState","popularity","setPopularity","_useState4","transform","translate","setTranslate","artist","artists","album","offset","useEffect","delta","style","external_urls","spotify","name","Track","_useState6","setTrack","_useState8","setError","url","trackId","setData","data","arguments","length","undefined","err","fetch","then","response","json","body","catch","onLoaded","trackImage","backgroundImage","images","render","App_slicedToArray","totoLoaded","setTotoLoaded","weezerLoaded","setWeezerLoaded","document","querySelector","remove","Track_Track","Footer_Footer"],"mappings":"6LAMO,SAASA,IACZ,OACIC,EAAA,qBAAKC,UAAU,UAAf,oCAEID,EAAA,mBAAGE,KAAK,uDACJF,EAAA,cAACG,EAAA,EAAD,CAASC,KAAMC,IAAYC,KAAK,QAAQC,cAAc,yaCHtE,SAASC,EAAWC,GAChB,OAAKA,EAAMC,MACJV,EAAA,qBAAKC,UAAU,eAAeQ,EAAMC,OADhB,KAI/B,SAASC,EAAaF,GAClB,IAAKA,EAAMG,MAAS,OAAO,KAE3B,IAAMC,EAAqB,SAACC,GAAD,OACvBC,OAAOC,WAAa,IAApB,cAAAC,OAAwCH,EAAQ,IAAM,IAAMA,EAA5D,oBAAAG,OAAsFH,EAAQ,GAAK,GAAKA,EAAxG,OAJqDI,EAAAC,EAMWC,mBAAS,KANpB,GAMjDC,EANiDH,EAAA,GAMrCI,EANqCJ,EAAA,GAAAK,EAAAJ,EAOeC,mBAAS,CAAEI,UAAWX,EAAmBQ,KAPxD,GAOjDI,EAPiDF,EAAA,GAOtCG,EAPsCH,EAAA,GASnDX,EAAQH,EAAMG,MACde,EAASf,EAAMgB,QAAS,GACxBC,EAAQjB,EAAMiB,MAEdC,EAAS,IAAMlB,EAAMS,WAS3B,OALAU,oBAAU,WAFG,IAA6BC,EAGtCV,GAHiE,GAA3BU,EAGC,QAApBX,EAHmEW,EAGvDF,GAC/BJ,EAAa,CAAEF,UAAWX,EAAmBQ,OAI7CrB,EAAA,qBAAKC,UAAU,iBACXD,EAAA,qBAAKC,UAAU,mBAAmBgC,MAAOR,GACrCzB,EAAA,qBAAKC,UAAU,cACXD,EAAA,mBAAGE,KAAMU,EAAMsB,cAAcC,SAAUvB,EAAMwB,MADjD,MAEIpC,EAAA,mBAAGE,KAAMyB,EAAOO,cAAcC,SAA9B,IAAyCvB,EAAMgB,QAAS,GAAIQ,MAFhE,kBAGIpC,EAAA,mBAAGE,KAAM2B,EAAMK,cAAcC,SAA7B,IAAwCN,EAAMO,OAElDpC,EAAA,wBAAKY,EAAMS,YACXrB,EAAA,wCAKT,SAASqC,EAAM5B,GAAiC,IAAA6B,EAAAnB,EACKC,mBAAS,MADd,GAC3CR,EAD2C0B,EAAA,GACpCC,EADoCD,EAAA,GAAAE,EAAArB,EAEOC,mBAAS,MAFhB,GAE3CV,EAF2C8B,EAAA,GAEpCC,EAFoCD,EAAA,GAI/CE,EAAG,mCAAAzB,OAAsCR,EAAMkC,SAGnD,SAASC,IAAsD,IAA9CC,EAA8CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhC,KAAMG,EAA0BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,KAC/CP,EAASM,GACTJ,EAASQ,GAWb,GAf6CP,EAAG,0CAAAzB,OAA6CR,EAAMkC,SAOnGZ,oBAAU,WACNmB,MAAMR,GACDS,KAAK,SAACC,GAAD,OAAwBA,EAASC,OAClCF,KAAK,SAACN,GAAD,OAA2BD,EAAQC,EAAKS,KAAM,QACnDC,MAAM,SAACN,GAAD,OAAiBL,EAAQ,KAAMK,OACzCM,MAAM,SAACN,GAAD,OAAiBR,EAASQ,MACtC,CAAExC,EAAMkC,UAEG,OAAV/B,GAA4B,OAAVF,EAAkB,OAAO,KAE/CD,EAAM+C,UAAS,GAEf,IAAMC,EAAa,CACfC,gBAAe,OAAAzC,OAASL,EAAMiB,MAAM8B,OAAQ,GAAIjB,IAAjC,MAGnB,OACI1C,EAAA,qBAAKC,UAAS,SAAAgB,OAAWR,EAAMkB,QAAUM,MAAOwB,GAC5CzD,EAAA,cAACQ,EAAD,CAAYE,MAAOA,IACnBV,EAAA,cAACW,EAAD,CAAcC,MAAOA,uZC3EjCgD,iBAAO5D,EAAA,cCCA,WAA6B,IAAAkB,EAAA2C,EACsCzC,oBAAS,GAD/C,GACxB0C,EADwB5C,EAAA,GACZ6C,EADY7C,EAAA,GAAAK,EAAAsC,EAE0CzC,oBAAS,GAFnD,GAExB4C,EAFwBzC,EAAA,GAEV0C,EAFU1C,EAAA,GAWhC,OAPAQ,oBAAU,WACF+B,GAAcE,GACCE,SAASC,cAAc,WAC/BC,UAEZ,CAAEN,EAAYE,IAGbhE,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,UACXD,EAAA,cAACqE,EAAD,CAAO1C,OAAO,OAAOgB,QAAQ,yBAAyBa,SAAUO,IAChE/D,EAAA,cAACqE,EAAD,CAAO1C,OAAO,SAASgB,QAAQ,yBAAyBa,SAAUS,KAErEH,GAAcE,GAAgBhE,EAAA,cAACsE,EAAD,QDlBpC,MAASJ,SAASC,cAAc","file":"main.chunk.b1f74493ad9c15c9797b.js","sourcesContent":["import Octicon, { MarkGithub } from \"@githubprimer/octicons-react\";\nimport * as React from \"react\";\nimport { ReactElement } from \"react\";\n\nimport \"./Footer.scss\";\n\nexport function Footer(): ReactElement {\n    return (\n        <div className=\"footer\">\n            Why? How? Check it out on GitHub:\n            <a href=\"https://github.com/DTCurrie/africa-vs-africa-client\">\n                <Octicon icon={MarkGithub} size=\"small\" verticalAlign=\"middle\" />\n            </a>\n        </div>);\n}\n","import * as React from \"react\";\nimport { useEffect, useState, Dispatch, ReactElement } from \"react\";\n\nimport \"./Track.scss\";\n\ninterface TrackProps { artist: string; trackId: string; onLoaded: (loaded: boolean) => void; }\ninterface Translate { transform: string; }\n\nfunction TrackError(props: { error: string }): ReactElement {\n    if (!props.error) { return null; }\n    return <div className=\"track-error\">{props.error}</div>;\n}\n\nfunction TrackContent(props: { track: Track }): ReactElement {\n    if (!props.track) { return null; }\n\n    const calculateTransform = (value: number): string =>\n        window.innerWidth < 992 ? `translateX(${value > 60 ? -60 : -value}%)` : `translateY(${value > 65 ? 65 : value}%)`;\n\n    const [ popularity, setPopularity ]: [ number, Dispatch<number> ] = useState(100);\n    const [ translate, setTranslate ]: [ Translate, Dispatch<Translate> ] = useState({ transform: calculateTransform(popularity) });\n\n    const track = props.track;\n    const artist = track.artists[ 0 ];\n    const album = track.album;\n\n    const offset = 100 - track.popularity;\n\n    const lerp = (start: number, end: number, delta: number): number => (1 - delta) * start + delta * end;\n\n    useEffect(() => {\n        setPopularity(lerp(popularity, offset, 0.0025));\n        setTranslate({ transform: calculateTransform(popularity) });\n    });\n\n    return (\n        <div className=\"track-content\">\n            <div className=\"track-popularity\" style={translate}>\n                <div className=\"track-info\">\n                    <a href={track.external_urls.spotify}>{track.name}</a> by\n                    <a href={artist.external_urls.spotify}> {track.artists[ 0 ].name}</a> from the album\n                    <a href={album.external_urls.spotify}> {album.name}</a>\n                </div>\n                <h1>{track.popularity}</h1>\n                <h3>POPULARITY</h3>\n            </div>\n        </div>);\n}\n\nexport function Track(props: TrackProps): ReactElement {\n    const [ track, setTrack ]: [ Track, Dispatch<Track> ] = useState(null);\n    const [ error, setError ]: [ string, Dispatch<string> ] = useState(null);\n\n    let url = `http://localhost:3000/api/track/${props.trackId}`;\n    if (process.env.NODE_ENV === \"production\") { url = `https://ava.devintcurrie.com/api/track/${props.trackId}`; }\n\n    function setData(data: Track = null, err: string = null): void {\n        setTrack(data);\n        setError(err);\n    }\n\n    useEffect(() => {\n        fetch(url)\n            .then((response: Response) => response.json()\n                .then((data: { body: Track }) => setData(data.body, null))\n                .catch((err: string) => setData(null, err)))\n            .catch((err: string) => setError(err));\n    }, [ props.trackId ]);\n\n    if (track === null && error === null) { return null; }\n\n    props.onLoaded(true);\n\n    const trackImage = {\n        backgroundImage: `url(${track.album.images[ 0 ].url})`,\n    };\n\n    return (\n        <div className={`track ${props.artist}`} style={trackImage}>\n            <TrackError error={error} />\n            <TrackContent track={track} />\n        </div>);\n\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { App } from \"./components/App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n","import * as React from \"react\";\nimport { useEffect, useState, Dispatch, ReactElement } from \"react\";\n\nimport { Footer } from \"./Footer/Footer\";\nimport { Track } from \"./Track/Track\";\n\nexport function App(): ReactElement {\n    const [ totoLoaded, setTotoLoaded ]: [ boolean, Dispatch<boolean> ] = useState(false);\n    const [ weezerLoaded, setWeezerLoaded ]: [ boolean, Dispatch<boolean> ] = useState(false);\n\n    useEffect(() => {\n        if (totoLoaded && weezerLoaded) {\n            const loader = document.querySelector(\".loader\");\n            loader.remove();\n        }\n    }, [ totoLoaded, weezerLoaded ]);\n\n    return (\n        <div className=\"app\">\n            <div className=\"tracks\">\n                <Track artist=\"toto\" trackId=\"2374M0fQpWi3dLnB54qaLX\" onLoaded={setTotoLoaded} />\n                <Track artist=\"weezer\" trackId=\"36Pim2ANczp82lCWIb8GHy\" onLoaded={setWeezerLoaded} />\n            </div>\n            {totoLoaded && weezerLoaded && <Footer />}\n        </div>);\n}\n"],"sourceRoot":""}