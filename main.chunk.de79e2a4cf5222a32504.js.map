{"version":3,"sources":["webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Track/Track.tsx","webpack:///./src/Index.tsx","webpack:///./src/components/App.tsx"],"names":["Footer","react_default","a","createElement","className","href","index_esm","icon","MarkGithub","size","verticalAlign","TrackError","props","error","TrackContent","track","calculateTransform","value","window","innerWidth","concat","_useState2","_slicedToArray","useState","popularity","setPopularity","_useState4","transform","translate","setTranslate","artist","artists","album","offset","useEffect","delta","style","external_urls","spotify","name","Track","_useState6","undefined","setTrack","_useState8","setError","url","trackId","setData","data","err","fetch","then","response","json","body","catch","onLoaded","trackImage","backgroundImage","images","render","App_slicedToArray","totoLoaded","setTotoLoaded","weezerLoaded","setWeezerLoaded","document","querySelector","remove","Track_Track","Footer_Footer"],"mappings":"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","file":"main.chunk.de79e2a4cf5222a32504.js","sourcesContent":["import Octicon, { MarkGithub } from '@githubprimer/octicons-react';\nimport React, { ReactElement } from 'react';\n\nimport './Footer.scss';\n\nexport function Footer(): ReactElement {\n    return (\n        <div className='footer'>\n            Why? How? Check it out on GitHub:\n            <a href='https://github.com/DTCurrie/africa-vs-africa-client'>\n                <Octicon icon={MarkGithub} size='small' verticalAlign='middle' />\n            </a>\n        </div>);\n}\n","import React, { Dispatch, ReactElement, useEffect, useState } from 'react';\n\nimport './Track.scss';\n\ninterface TrackProps { artist: string; trackId: string; onLoaded(loaded: boolean): void; }\ninterface Translate { transform: string; }\n\nfunction TrackError(props: { error: string }): ReactElement {\n    if (!props.error) { return null; }\n    return <div className='track-error'>{props.error}</div>;\n}\n\nfunction TrackContent(props: { track: Track }): ReactElement {\n    if (!props.track) { return null; }\n\n    const calculateTransform = (value: number): string =>\n        window.innerWidth < 992 ? `translateX(${value > 60 ? -60 : -value}%)` : `translateY(${value > 65 ? 65 : value}%)`;\n\n    const [ popularity, setPopularity ]: [ number, Dispatch<number> ] = useState(100);\n    const [ translate, setTranslate ]: [ Translate, Dispatch<Translate> ] = useState({ transform: calculateTransform(popularity) });\n\n    const track = props.track;\n    const artist = track.artists[ 0 ];\n    const album = track.album;\n\n    const offset = 100 - track.popularity;\n\n    const lerp = (start: number, end: number, delta: number): number => (1 - delta) * start + delta * end;\n\n    useEffect(() => {\n        setPopularity(lerp(popularity, offset, 0.0025));\n        setTranslate({ transform: calculateTransform(popularity) });\n    });\n\n    return (\n        <div className='track-content'>\n            <div className='track-popularity' style={translate}>\n                <div className='track-info'>\n                    <a href={track.external_urls.spotify}>{track.name}</a> by\n                    <a href={artist.external_urls.spotify}> {track.artists[ 0 ].name}</a> from the album\n                    <a href={album.external_urls.spotify}> {album.name}</a>\n                </div>\n                <h1>{track.popularity}</h1>\n                <h3>POPULARITY</h3>\n            </div>\n        </div>);\n}\n\nexport function Track(props: TrackProps): ReactElement {\n    const [ track, setTrack ]: [ Track, Dispatch<Track> ] = useState(undefined);\n    const [ error, setError ]: [ string, Dispatch<string> ] = useState(undefined);\n\n    let url = `http://localhost:3000/api/track/${props.trackId}`;\n    if (process.env.NODE_ENV === 'production') { url = `https://ava.devintcurrie.com/api/track/${props.trackId}`; }\n\n    function setData(data?: Track, err?: string): void {\n        setTrack(data);\n        setError(err);\n    }\n\n    useEffect(() => {\n        fetch(url)\n            .then((response: Response) => response.json()\n                .then((data: { body: Track }) => setData(data.body, undefined))\n                .catch((err: string) => setData(undefined, err)))\n            .catch((err: string) => setError(err));\n    }, [ props.trackId ]);\n\n    if (track === undefined && error === undefined) { return null; }\n\n    props.onLoaded(true);\n\n    const trackImage = {\n        backgroundImage: `url(${track.album.images[ 0 ].url})`\n    };\n\n    return (\n        <div className={`track ${props.artist}`} style={trackImage}>\n            <TrackError error={error} />\n            <TrackContent track={track} />\n        </div>);\n\n}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { App } from './components/App';\n\nrender(<App />, document.querySelector('#root'));\n","import React, { Dispatch, ReactElement, useEffect, useState } from 'react';\n\nimport { Footer } from './Footer/Footer';\nimport { Track } from './Track/Track';\n\nexport function App(): ReactElement {\n    const [ totoLoaded, setTotoLoaded ]: [ boolean, Dispatch<boolean> ] = useState(false);\n    const [ weezerLoaded, setWeezerLoaded ]: [ boolean, Dispatch<boolean> ] = useState(false);\n\n    useEffect(() => {\n        if (totoLoaded && weezerLoaded) {\n            const loader = document.querySelector('.loader');\n            loader.remove();\n        }\n    }, [ totoLoaded, weezerLoaded ]);\n\n    return (\n        <div className='app'>\n            <div className='tracks'>\n                <Track artist='toto' trackId='2374M0fQpWi3dLnB54qaLX' onLoaded={setTotoLoaded} />\n                <Track artist='weezer' trackId='36Pim2ANczp82lCWIb8GHy' onLoaded={setWeezerLoaded} />\n            </div>\n            {totoLoaded && weezerLoaded && <Footer />}\n        </div>);\n}\n"],"sourceRoot":""}