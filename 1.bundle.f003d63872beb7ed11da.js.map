{"version":3,"sources":["webpack:///./src/index.tsx","webpack:///./src/components/TrackCard.tsx"],"names":["appRoot","document","querySelector","render","react__WEBPACK_IMPORTED_MODULE_0__","className","_components_TrackCard__WEBPACK_IMPORTED_MODULE_2__","key","id","TrackCardError","props","error","TrackCardContent","track","artist","artists","album","href","external_urls","spotify","name","popularity","TrackCard","_useState2","_slicedToArray","useState","setTrack","_useState4","setError","url","concat","useEffect","fetch","then","response","json","data","body","catch","err","react_bootstrap_Card__WEBPACK_IMPORTED_MODULE_1___default","a"],"mappings":"iSAKA,QAAMA,EAAUC,SAASC,cAAc,SACvCC,iBACIC,EAAA,qBAAKC,UAAU,eACXD,EAAA,cAACE,EAAA,EAAD,CAAWC,IAAI,OAAOC,GAAG,2BACzBJ,EAAA,cAACE,EAAA,EAAD,CAAWC,IAAI,SAASC,GAAG,4BACtBR,qGALPA,utBCAN,SAASS,EAAeC,GACpB,OAAKA,EAAMC,MACJP,EAAA,qBAAKC,UAAU,oBAAoBK,EAAMC,OADrB,KAI/B,SAASC,EAAiBF,GACtB,IAAKA,EAAMG,MAAS,OAAO,KAC3B,IAAMA,EAAQH,EAAMG,MACdC,EAASD,EAAME,QAAS,GACxBC,EAAQH,EAAMG,MAEpB,OACIZ,EAAA,qBAAKC,UAAU,sBACXD,EAAA,qBAAKC,UAAU,oBACXD,EAAA,wBAAIA,EAAA,mBAAGa,KAAMJ,EAAMK,cAAcC,SAAUN,EAAMO,OACjDhB,EAAA,6BAAMA,EAAA,mBAAGa,KAAMH,EAAOI,cAAcC,SAAUN,EAAME,QAAS,GAAIK,OACjEhB,EAAA,yCAAkBA,EAAA,mBAAGa,KAAMD,EAAME,cAAcC,SAAUH,EAAMI,QAEnEhB,EAAA,qBAAKC,UAAU,mBACXD,EAAA,uCAAiBS,EAAMQ,WAAvB,UAMT,SAASC,EAAUZ,GAAwB,IAAAa,EAAAC,EACYC,mBAAS,MADrB,GACtCZ,EADsCU,EAAA,GAC/BG,EAD+BH,EAAA,GAAAI,EAAAH,EAEYC,mBAAS,MAFrB,GAEtCd,EAFsCgB,EAAA,GAE/BC,EAF+BD,EAAA,GAIxCE,EAAG,mCAAAC,OAAsCpB,EAAMF,IAUrD,OAPAuB,oBAAU,WACNC,MAAMH,GACDI,KAAK,SAACC,GAAD,OAAwBA,EAASC,OAClCF,KAAK,SAACG,GAAD,OAA4BV,EAASU,EAAKC,UACnDC,MAAM,SAACC,GAAD,OAAiBX,EAASW,MACtC,CAAE7B,EAAMF,KAEG,OAAVK,GAA4B,OAAVF,EAEdP,EAAA,cAACoC,EAAAC,EAAD,CAAMpC,UAAU,cAAhB,YAOJD,EAAA,cAACoC,EAAAC,EAAD,CAAMpC,UAAU,cACZD,EAAA,cAACK,EAAD,CAAgBE,MAAOA,IACvBP,EAAA,cAACQ,EAAD,CAAkBC,MAAOA,wMAlD5BJ,kHAKAG,oHAoBOU","file":"1.bundle.f003d63872beb7ed11da.js","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { TrackCard } from \"./components/TrackCard\";\n\nconst appRoot = document.querySelector(\"#root\");\nrender((\n    <div className=\"track-cards\">\n        <TrackCard key=\"toto\" id=\"2374M0fQpWi3dLnB54qaLX\" />\n        <TrackCard key=\"weezer\" id=\"36Pim2ANczp82lCWIb8GHy\" />\n    </div>), appRoot);\n","import * as React from \"react\";\nimport { Dispatch, ReactElement, useEffect, useState } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\n\nfunction TrackCardError(props: { error: string }): ReactElement {\n    if (!props.error) { return null; }\n    return <div className=\"track-card-error\">{props.error}</div>;\n}\n\nfunction TrackCardContent(props: { track: ITrack }): ReactElement {\n    if (!props.track) { return null; }\n    const track = props.track;\n    const artist = track.artists[ 0 ];\n    const album = track.album;\n\n    return (\n        <div className=\"track-card-content\">\n            <div className=\"track-card-title\">\n                <h1><a href={track.external_urls.spotify}>{track.name}</a></h1>\n                <p>by <a href={artist.external_urls.spotify}>{track.artists[ 0 ].name}</a></p>\n                <p>from the album <a href={album.external_urls.spotify}>{album.name}</a></p>\n            </div>\n            <div className=\"track-card-body\">\n                <h3>Popularity: {track.popularity}/100</h3>\n            </div>\n        </div>\n    );\n}\n\nexport function TrackCard(props: { id: string; }) {\n    const [ track, setTrack ]: [ ITrack, Dispatch<ITrack> ] = useState(null);\n    const [ error, setError ]: [ string, Dispatch<string> ] = useState(null);\n\n    const url = `http://localhost:3000/api/track/${props.id}`;\n    if (process.env.NODE_ENV === \"production\") { /* point ot production url */ }\n\n    useEffect(() => {\n        fetch(url)\n            .then((response: Response) => response.json()\n                .then((data: { body: ITrack }) => setTrack(data.body)))\n            .catch((err: string) => setError(err));\n    }, [ props.id ]);\n\n    if (track === null && error === null) {\n        return (\n            <Card className=\"track-card\">\n                Loading!\n            </Card>\n        );\n    }\n\n    return (\n        <Card className=\"track-card\">\n            <TrackCardError error={error} />\n            <TrackCardContent track={track} />\n        </Card>);\n\n}\n\n// export class TrackCard extends React.Component<ITrackCardProps, { error: string; track: ITrack; }> {\n//     constructor(props: ITrackCardProps) {\n//         super(props);\n//         this.state = {\n//             error: null,\n//             track: null,\n//         };\n//     }\n//     public componentDidMount() {\n//         const url = `http://localhost:3000/api/track/${this.props.id}`;\n//         if (process.env.NODE_ENV === \"production\") { /* point ot production url */ }\n\n//         fetch(url)\n//             .then((response: Response) => response.json()\n//                 .then((data: { body: ITrack }) => this.setState({ error: null, track: data.body })))\n//             .catch((error: string) => this.setState({ error, track: null }));\n//     }\n\n//     public render() {\n//         const { error, track } = this.state;\n\n//         return (\n//             <Card className=\"track-card\">\n//                 <TrackCardError error={error} />\n//                 <TrackCardContent track={track} />\n//             </Card>);\n//     }\n// }\n"],"sourceRoot":""}